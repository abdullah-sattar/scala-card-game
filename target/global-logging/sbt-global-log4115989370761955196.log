[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Abdul\AppData\Local\Temp\idea3.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Abdul\AppData\Local\Temp\idea3.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Amazon.com Inc. Java 11.0.13)
[debug]       Load.loadUnit: plugins took 78.2542ms
[debug]       Load.loadUnit: defsScala took 0.3634ms
[debug] [Loading] Scanning directory C:\Users\Abdul\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Abdul\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.2035 ms
[debug]           Load.resolveProject(global-plugins) took 40.3634ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Abdul\.sbt\1.0\plugins, plugins: List(<none>))) took 78.3916ms
[debug] [Loading] Done in C:\Users\Abdul\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 99.3054ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1824ms
[debug]     Load.loadUnit(file:/C:/Users/Abdul/.sbt/1.0/plugins/, ...) took 186.2827ms
[debug]   Load.apply: load took 326.4265ms
[debug]   Load.apply: resolveProjects took 4.7946ms
[debug]   Load.apply: finalTransforms took 65.1152ms
[debug]   Load.apply: config.delegates took 9.1574ms
[debug]   Load.apply: Def.make(settings)... took 359.8329ms
[debug]   Load.apply: structureIndex took 95.3222ms
[debug]   Load.apply: mkStreams took 1.7036ms
[info] loading global plugins from C:\Users\Abdul\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2220.2678ms
[debug]           Load.loadUnit: plugins took 14.7275ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Abdul\Documents\scala-projects\scala-card-game\project
[debug]             Load.loadUnit: mkEval took 5.1506ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Abdul\Documents\scala-projects\scala-card-game\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5239 ms
[info] loading settings for project scala-card-game-build from idea3.sbt ...
[debug]               Load.resolveProject(scala-card-game-build) took 2.5152ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scala-card-game-build, base: C:\Users\Abdul\Documents\scala-projects\scala-card-game\project, plugins: List(<none>))) took 4.5009ms
[debug] [Loading] Done in C:\Users\Abdul\Documents\scala-projects\scala-card-game\project, returning: (scala-card-game-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 104.7964ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.1689ms
[debug]         Load.loadUnit(file:/C:/Users/Abdul/Documents/scala-projects/scala-card-game/project/, ...) took 123.416ms
[debug]       Load.apply: load took 124.6035ms
[debug]       Load.apply: resolveProjects took 0.1095ms
[debug]       Load.apply: finalTransforms took 11.1415ms
[debug]       Load.apply: config.delegates took 0.4547ms
[debug]       Load.apply: Def.make(settings)... took 76.549ms
[debug]       Load.apply: structureIndex took 26.2505ms
[debug]       Load.apply: mkStreams took 0.0025ms
[info] loading project definition from C:\Users\Abdul\Documents\scala-projects\scala-card-game\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 483.968ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Abdul\Documents\scala-projects\scala-card-game
[debug]       Load.loadUnit: mkEval took 0.2607ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.3449 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 29.1212ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Abdul\Documents\scala-projects\scala-card-game, plugins: List(<none>))) took 33.1604ms
[debug] [Loading] Done in C:\Users\Abdul\Documents\scala-projects\scala-card-game, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 95.8831ms
[debug]     Load.loadUnit: cleanEvalClasses took 1.9348ms
[debug]   Load.loadUnit(file:/C:/Users/Abdul/Documents/scala-projects/scala-card-game/, ...) took 582.3695ms
[debug] Load.apply: load took 583.5915ms
[debug] Load.apply: resolveProjects took 0.0945ms
[debug] Load.apply: finalTransforms took 22.7886ms
[debug] Load.apply: config.delegates took 0.3264ms
[debug] Load.apply: Def.make(settings)... took 99.4476ms
[debug] Load.apply: structureIndex took 19.773ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to scala-card-game (in build file:/C:/Users/Abdul/Documents/scala-projects/scala-card-game/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61703 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61703, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scala-card-game (in build file:/C:/Users/Abdul/Documents/scala-projects/scala-card-game/)
[debug] > Exec(idea-shell, None, None)
